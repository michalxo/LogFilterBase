NGMON -> NGMON Logger latex!

RUN hadoop exmaple job and look for log statements

-- Qpid application instead of hadoop --

When translating hadoop-common project, file contains variables at the end of the file! Move to the first class:
/home/mtoth/tmp/rewritting/hadoop-common/hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/StreamJob.java
hadoop-common/hadoop-tools/hadoop-streaming/src/main/java/org/apache/hadoop/streaming/StreamJob.java


FixMe
LOG.error(datanode.getDisplayName()+":DataXceiver error processing "+((op==null)?"unknown":op.name())+" operation "+" src: "+remoteAddress+" dest: "+localAddress,t)

FixMe GoMatch (\n?)
LOG.info("ParsedTask details:"+obtainCounters()+"\n"+obtainFailedDueToAttemptId()+"\nPreferred Locations are:")
org.apache.hadoop.parsedtask_details_npreferred_locations_are##ParsedTask details:<STRING:obtainCounters>\n<STRING:obtainFailedDueToAttemptId>\nPreferred Locations are:

// LOG.warn("Failed to transfer block "+blocks[i],ie)
org.apache.hadoop.failed_to_transfer_block##Failed to transfer block <STRING:blocks[]> <STRING:Exception>


org.apache.hadoop.opened_info_server_at##Opened info server at <STRING:infoHost>:<INT:tmpInfoPort>

org.apache.hadoop.bad_conf_file_top_level_element##bad conf file: top-level element not <configuration>
org.apache.hadoop.bad_conf_file_top_level_element##Bad conf file: top-level element not <queues>




variable declaration related rules:

x memberDeclaration
x   fieldDeclarator
x   localVariableDeclaration
?   constantDeclarator
?   constDeclaration




==== In original java source code file change following ====
-- modify imports --
  import org.apache.commons.logging.Log;            *   depend on logging framework
  import org.apache.commons.logging.LogFactory;     *   depend on logging framework
  import cz.muni.fi.logger.LoggerFactory;           +
  import cz.muni.fi.logger.LogGlobal;               +
  import org.apache.hadoop.hdfs.nfs.NfsNamespace;   +?  autogenerated derived from file location or package, limited to depth o 6 (5+1 total) - changeable?


-- modify class members --
? private static final LogGlobal LOG_GLOBAL;                        +   add this default handler to pass through LOG.isXEnabled() checkers
  Log LOG = LogFactory.getLog(AsyncDataService.class)               *   depend on logging framework
  NfsNamespace LOG = LoggerFactory.getLogger(NfsNamespace.class);   +   generated using actual namespace


  Log should be found by 'contains("log")' and type of import comparision.

-- translate log statements --
  if (LOG.isDebugEnabled()) {
        LOG.debug("Current active thread number: " + executor.getActiveCount()
            + " queue size:" + executor.getQueue().size()
            + " scheduled task number:" + executor.getTaskCount());
  }
   -->
  if (LOG_GLOBAL.isDebugEnabled()) {
        LOG.CURRENT_ACTIVE_THREAD_NUMBER_QUEUE_SIZE_SCHEDULED(executor.getActiveCount(),
                executor.getQueue().size(), executor.getTaskCount()).tag("org.apache.hadoop.hdfs.nfs").debug();
  }


  Limit line output to 80 characters if possible +/-10
  Maximum of X words in LOG.METHOD_CALL_NAME (by default 7) log_generation_max_length


=== logging systems usedd in hadoop ===
    SLF4J:
org.slf4j.Logger;
org.slf4j.LoggerFactory;

    Apache Commons Logging:
org.apache.commons.logging.impl.Log4JLogger;
org.apache.commons.logging.Log;
org.apache.commons.logging.LogFactory;


    Apache Log4j:
spi and non spi logger
org.apache.log4j.{,spi.}Logger;
org.apache.log4j.Level;
org.apache.log4j.LogManager;
+ other